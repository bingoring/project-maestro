[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "project-maestro"
description = "AI Agent-based Game Prototyping Automation System"
version = "0.1.0"
authors = [
    {name = "Project Maestro Team", email = "team@projectmaestro.dev"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core Framework - Modern LangChain
    "langchain>=0.3.0",
    "langchain-core>=0.3.0", 
    "langchain-community>=0.3.0",
    "langchain-openai>=0.2.0",
    "langchain-anthropic>=0.2.0",
    "langgraph>=0.2.0",
    "langsmith>=0.1.0",
    
    # Vector Stores & RAG
    "langchain-chroma>=0.1.0",
    "chromadb>=0.5.0",
    "sentence-transformers>=2.2.0",
    "tiktoken>=0.7.0",
    
    # Web Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Task Queue & Message Broker
    "celery[redis]>=5.3.0",
    "redis>=5.0.0",
    "kombu>=5.3.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    
    # AI & ML
    "openai>=1.6.0",
    "anthropic>=0.8.0",
    "requests>=2.31.0",
    "pillow>=10.1.0",
    "opencv-python>=4.8.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "structlog>=23.2.0",
    "rich>=13.7.0",
    "typer[all]>=0.9.0",
    "httpx>=0.26.0",
    "aiofiles>=23.2.0",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.0",
    
    # File Storage
    "minio>=7.2.0",
    "boto3>=1.34.0",
    
    # Monitoring & Observability
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "flake8>=6.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "httpx>=0.26.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]

[project.urls]
Homepage = "https://github.com/project-maestro/project-maestro"
Repository = "https://github.com/project-maestro/project-maestro"
Documentation = "https://project-maestro.readthedocs.io"

[project.scripts]
maestro = "project_maestro.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/project_maestro"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "kombu.*",
    "minio.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--cov=src/project_maestro",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]